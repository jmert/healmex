function cl = alm2cl(alms1, alms2, opt)
% cl = alm2cl(alms1, alms2, ...)
%
% Computes the angular power [cross-]spectrum from the set of harmonic
% coefficients alms1 and alms2. If alms2 is empty, then alms1 is used to
% produce the auto-spectrum.
%
% INPUTS
%   alms1       Complex spherical harmonic coefficients.
%   alms2       Optional, defaults to alms1.
%
% KEY-VALUE PAIRS
%   'lmax'      The maximum degree harmonic coefficient to compute. Optional if
%               inferrable by alm_getlmmax().
%
%   'mmax'      The maximum order harmonic coefficient to compute. Optional if
%               inferrable by alm_getlmmax().
%
% OUTPUTS
%   cl          The angular power spectrum <alms1 x alms2*>.
%

  arguments
    alms1    (:,1) {mustBeNumeric}
    alms2    (:,1) {mustBeNumeric} = alms1
    opt.lmax       {mustBeNumeric,mustBeScalarOrEmpty} = []
    opt.mmax       {mustBeNumeric,mustBeScalarOrEmpty} = []
  end

  [lmax, mmax] = @PACKAGEPREFIX@alm_getlmmax(alms1, opt.lmax, opt.mmax);
  if numel(alms1) ~= numel(alms2)
    throwAsCaller(MException('healmex:alm2cl:dimensionMismatch', ...
        'Mismatched sizes in alms1 and alms2'));
  end

  cl = libhealmex(int64(61), ...
      int32(lmax), int32(mmax), ...
      complex(double(alms1)), complex(double(alms2)));
end

