function cl = alm2cl(alms1, alms2, varargin)
% cl = alm2cl(alms1, alms2, varargin)
%
% Computes the angular power [cross-]spectrum from the set of harmonic
% coefficients alms1 and alms2. If alms2 is empty, then alms1 is used to
% produce the auto-spectrum.
%
% INPUTS
%   alms1       Complex spherical harmonic coefficients.
%   alms2       Optional, defaults to alms1.
%
% KEY-VALUE PAIRS
%   'lmax'      The maximum degree harmonic coefficient to compute. Optional if
%               inferrable by alm_getlmmax().
%
%   'mmax'      The maximum order harmonic coefficient to compute. Optional if
%               inferrable by alm_getlmmax().
%
% OUTPUTS
%   cl          The angular power spectrum <alms1 x alms2*>.
%

  p = inputParser();
  addParameter(p, 'lmax', [], @(x) isnumeric(x) & isscalar(x));
  addParameter(p, 'mmax', [], @(x) isnumeric(x) & isscalar(x));
  parse(p, varargin{:});
  opt = p.Results;

  [lmax, mmax] = @CLASSPREFIX@alm_getlmmax(alms, opt.lmax, opt.mmax);
  if ~exist('alms2', 'var') || isempty(alms2)
    alms2 = alms1;
  end
  if numel(alms1) ~= numel(alms2)
    error('Mismatched sizes in alms1 and alms2');
  end

  cl = libhealmex(int64(61), ...
      int32(lmax), int32(mmax), ...
      complex(double(alms1)), complex(double(alms2)));
end

