function alms = rotate_alm(transform, alms, lmax, mmax)
% alms = rotate_alms(transform, alms, lmax, mmax)
%
% INPUTS
%   transform   An integer giving one of the following coordinate transforms.
%
%       1 = Equatorial (2000) -> Galactic   (2000)
%       2 = Galactic   (2000) -> Equatorial (2000)
%       3 = Equatorial (2000) -> Ecliptic   (2000)
%       4 = Ecliptic   (2000) -> Equatorial (2000)
%       5 = Ecliptic   (2000) -> Galactic   (2000)
%       6 = Galactic   (2000) -> Ecliptic   (2000)
%       7 = Equatorial (1950) -> Galactic   (1950)
%       8 = Galactic   (1950) -> Equatorial (1950)
%       9 = Equatorial (1950) -> Ecliptic   (1950)
%      10 = Ecliptic   (1950) -> Equatorial (1950)
%      11 = Ecliptic   (1950) -> Galactic   (1950)
%      12 = Galactic   (1950) -> Ecliptic   (1950)
%
%   alms        A Nx1 or Nx3 of spherical harmonic coefficients.
%   lmax        Maximum degree of spherical harmonics. Optional if
%               alm_getlmmax() can infer lmax from the size of alms.
%   mmax        Maximum order of spherical harmonics. Optional if
%               alm_getlmmax() can infer mmax fromthe size of alms.
%
% OUTPUTS
%   alms
%
% EXAMPLE

  if transform < 0 || transform > 12
    error('Invalid coordinate transform specificiation: %d', transform);
  end

  if ~exist('lmax', 'var')
    lmax = [];
  end
  if ~exist('mmax', 'var')
    mmax = [];
  end

  [lmax, mmax] = @CLASSPREFIX@alm_getlmmax(alms, lmax, mmax);

  if size(alms, 2) == 1
    alms = @CLASSPREFIX@hpx_rotate_alm(transform, alms, lmax, mmax);
  elseif size(alms, 2) == 3
    [alms(:,1),alms(:,2),alms(:,3)] = @CLASSPREFIX@hpx_rotate_alm_pol(...
        transform, alms(:,1), alms(:,2), alms(:,3), lmax, mmax);
  else
    error('alms: Expected size 1 or 3 in second dimension, got %d', ...
        size(alms, 2));
  end
end
